// <auto-generated />
using System;
using LeamosColombiaProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeamosColombiaProject.Migrations
{
    [DbContext(typeof(LeamosColombiaProjectContext))]
    partial class LeamosColombiaProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeamosColombiaProject.Models.AbonoCartera", b =>
                {
                    b.Property<int>("IdAbonoCartera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAbonoCartera");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAbonoCartera"));

                    b.Property<int?>("Abono")
                        .HasColumnType("int");

                    b.Property<int?>("Cuotas")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCartera")
                        .HasColumnType("int")
                        .HasColumnName("idCartera");

                    b.HasKey("IdAbonoCartera")
                        .HasName("PK__AbonoCar__C3B643B0FE6314D9");

                    b.HasIndex("IdCartera");

                    b.ToTable("AbonoCartera", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Cartera", b =>
                {
                    b.Property<int>("IdCartera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCartera");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCartera"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaFinal");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaInicio");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<int?>("Monto")
                        .HasColumnType("int");

                    b.Property<int?>("Saldo")
                        .HasColumnType("int");

                    b.HasKey("IdCartera")
                        .HasName("PK__Cartera__CEF28AEAF7D72FC8");

                    b.HasIndex("IdVenta");

                    b.ToTable("Cartera", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Categorias", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240C4B1D4A68");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Ciudad")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Documento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Facultad")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<int?>("IdTipoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("idTipoDocumento");

                    b.Property<string>("Nombre")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<int?>("Semestre")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Universidad")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdCliente")
                        .HasName("PK__Cliente__885457EEE2A79888");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.HasKey("IdCompra")
                        .HasName("PK__Compra__48B99DB73FEC2016");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.DetalleCompra", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCompra"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("idCompra");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int?>("Precio")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleCompra")
                        .HasName("PK__DetalleC__62C252C15EFF07EC");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetalleCompra", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<int?>("Precio")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DetalleV__BFE2843FF27D49AC");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Editorial", b =>
                {
                    b.Property<int>("IdEditorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEditorial");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEditorial"));

                    b.Property<string>("NombreEditorial")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdEditorial")
                        .HasName("PK__Editoria__9DF182DB7A03A6D3");

                    b.ToTable("Editorial", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPermiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<string>("Modulo")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.HasKey("IdPermiso")
                        .HasName("PK__Permiso__06A584866F0BB324");

                    b.ToTable("Permiso", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.PermisoRol", b =>
                {
                    b.Property<int>("IdPermisoRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPermisoRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermisoRol"));

                    b.Property<int?>("IdPermiso")
                        .HasColumnType("int");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.HasKey("IdPermisoRol")
                        .HasName("PK__PermisoR__BBE208F9851EEFF4");

                    b.HasIndex("IdPermiso");

                    b.HasIndex("IdRol");

                    b.ToTable("PermisoRol", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<DateTime?>("Anio")
                        .HasColumnType("date");

                    b.Property<string>("Autor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("Editorial")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Isbn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ISBN");

                    b.Property<int?>("NPaginas")
                        .HasColumnType("int")
                        .HasColumnName("nPaginas");

                    b.Property<int?>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Sinopsis")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Titulo")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__07F4A132274BAC27");

                    b.HasIndex("Editorial");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Encargado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdProveedor")
                        .HasName("PK__Proveedo__A3FA8E6B0F4DC42B");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Referencia", b =>
                {
                    b.Property<int>("IdReferencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idReferencia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReferencia"));

                    b.Property<string>("Ciudad")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Documento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<string>("Nombre")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdReferencia")
                        .HasName("PK__Referenc__22743578261528D7");

                    b.HasIndex("IdCliente");

                    b.ToTable("Referencia");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__3C872F7674DBA5C2");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.TipoDocumento", b =>
                {
                    b.Property<int>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoDocumento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoDocumento"));

                    b.Property<string>("Documento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTipoDocumento")
                        .HasName("PK__TipoDocu__61FDF9F5302A2DD3");

                    b.ToTable("TipoDocumento", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contraseña")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Nombre")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("RecoveryToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecoveryTokenExpirationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A6A44FA6A1");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<string>("TipoVenta")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta__077D56149D7D76B5");

                    b.HasIndex("IdCliente");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.AbonoCartera", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.Cartera", "IdCarteraNavigation")
                        .WithMany("AbonoCarteras")
                        .HasForeignKey("IdCartera")
                        .HasConstraintName("FK_AbonoCartera_Cartera");

                    b.Navigation("IdCarteraNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Cartera", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.Venta", "IdVentaNavigation")
                        .WithMany("Carteras")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK_Cartera_Venta");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Cliente", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.TipoDocumento", "IdTipoDocumentoNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdTipoDocumento")
                        .HasConstraintName("FK_Cliente_TipoDocumento");

                    b.Navigation("IdTipoDocumentoNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Compra", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_Compra_Proveedor");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.DetalleCompra", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.Compra", "IdCompraNavigation")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("FK_DetalleCompra_Compra");

                    b.HasOne("LeamosColombiaProject.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_DetalleCompra_Producto");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.DetalleVenta", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_DetalleVenta_Producto");

                    b.HasOne("LeamosColombiaProject.Models.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK_DetalleVenta_Venta");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.PermisoRol", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.Permiso", "IdPermisoNavigation")
                        .WithMany("PermisoRols")
                        .HasForeignKey("IdPermiso")
                        .HasConstraintName("FK_PermisoRol_Permiso");

                    b.HasOne("LeamosColombiaProject.Models.Rol", "IdRolNavigation")
                        .WithMany("PermisoRols")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK_PermisoRol_Rol");

                    b.Navigation("IdPermisoNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Producto", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.Editorial", "EditorialNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Editorial")
                        .HasConstraintName("FK_Producto_Editorial");

                    b.HasOne("LeamosColombiaProject.Models.Categorias", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_Producto_Categoria");

                    b.Navigation("EditorialNavigation");

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Referencia", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Referencia")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Referencia_Cliente");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Usuario", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK_Usuario_Rol");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Venta", b =>
                {
                    b.HasOne("LeamosColombiaProject.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Venta_Cliente");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Cartera", b =>
                {
                    b.Navigation("AbonoCarteras");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Categorias", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Cliente", b =>
                {
                    b.Navigation("Referencia");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Compra", b =>
                {
                    b.Navigation("DetalleCompras");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Editorial", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Permiso", b =>
                {
                    b.Navigation("PermisoRols");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Producto", b =>
                {
                    b.Navigation("DetalleCompras");

                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Proveedor", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Rol", b =>
                {
                    b.Navigation("PermisoRols");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.TipoDocumento", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("LeamosColombiaProject.Models.Venta", b =>
                {
                    b.Navigation("Carteras");

                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
